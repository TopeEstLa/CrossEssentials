plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
}

group 'io.squid'
version 'PREBUILD-0.0.0'

allprojects {
    apply plugin: 'java'

    compileJava.options.encoding = 'UTF-8'
    java.toolchain.languageVersion.set(JavaLanguageVersion.of(17))

    repositories {
        mavenCentral()
        mavenLocal()

    }

    dependencies {
        implementation 'io.lettuce:lettuce-core:6.2.1.RELEASE'
        compileOnly group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'
        compileOnly group: 'com.rabbitmq', name: 'amqp-client', version: '5.16.0'

        compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.4'
        compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4'
        compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.4'

        compileOnly group: 'commons-lang', name: 'commons-lang', version: '2.6'
        compileOnly group: 'org.xerial.snappy', name: 'snappy-java', version: '1.1.8.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()

}

dependencies {
    implementation project(":API")

    compileOnly group: 'io.papermc.paper', name: 'paper-api', version: '1.19.2-R0.1-SNAPSHOT'

    compileOnly group: 'net.kyori', name: 'adventure-api', version: '4.11.0'
    compileOnly group: 'net.kyori', name: 'adventure-platform-bukkit', version: '4.1.2'
    compileOnly group: 'net.kyori', name: 'adventure-platform-bungeecord', version: '4.1.2'
    compileOnly group: 'net.kyori', name: 'adventure-text-minimessage', version: '4.11.0'

}

subprojects {
    shadowJar {
        archiveFileName = "${project.name}.jar"
        destinationDirectory = file("../archive/")
    }
}

shadowJar {
    dependsOn(jar)

    delete fileTree('./target/') {
        exclude archiveName
    }

    destinationDir = file("./target/")

    from sourceSets.getByName("main").output
}

jar {
    from {
        for (File file : new File("archive").listFiles()) {
            zipTree(file)
        }
    }
}

clean {
    delete file('./archive/')
}

build {
    dependsOn shadowJar
    dependsOn clean
}

processResources {
    eachFile { details ->
        if (details.name.contentEquals('plugin.yml') || details.name.contentEquals('bungee.yml') || details.name.contentEquals('velocity-plugin.json')) {
            filter { String line ->
                line.replace('${project.version}', version)
            }
        }
    }
}

shadowJar.shouldRunAfter build
build.shouldRunAfter subprojects.build
publish.shouldRunAfter shadowJar
